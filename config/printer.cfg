[mcu]
canbus_uuid: 3a29827ac728

[mcu SB2040]
canbus_uuid: e46298d156f7

[printer]
kinematics: corexz
max_velocity: 200
max_accel: 1000
minimum_cruise_ratio: 0.5
square_corner_velocity: 4.0
max_z_velocity: 50
max_z_accel: 1000

[stepper_x] # M1
step_pin: PC8
dir_pin: PC9
enable_pin: !PA15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200
endstop_pin: ^SB2040:gpio20
position_min: 0
position_endstop: 250
position_max: 250
homing_speed: 70
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PD9
run_current: 0.96152
stealthchop_threshold: 999999

[stepper_y] # M3
step_pin: PC6
dir_pin: PC7
enable_pin: !PA9
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200
endstop_pin: !PC3
position_min: -30
position_endstop: 223
position_max: 223
homing_speed: 70
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PB10
run_current: 1.01808
stealthchop_threshold: 999999

[stepper_z] # M2
step_pin: PA10
dir_pin: PA14
enable_pin: !PA13
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200
endstop_pin: probe:z_virtual_endstop
position_min: -3.0
position_max: 250
homing_speed: 40
homing_positive_dir: false

[tmc2209 stepper_z]
uart_pin: PD8
run_current: 0.96152
stealthchop_threshold: 999999

[extruder]
step_pin: SB2040:gpio14
dir_pin: SB2040:gpio13
enable_pin: !SB2040:gpio16
microsteps: 16
rotation_distance: 21.84
full_steps_per_rotation: 200
gear_ratio: 50:8
nozzle_diameter: 0.400
filament_diameter: 1.75
max_extrude_only_distance: 100.0
pressure_advance: 0.045
pressure_advance_smooth_time: 0.045
heater_pin: SB2040:gpio23
max_power: 1.0
sensor_type: ATC Semitec 104GT-2
sensor_pin: SB2040:gpio27
min_extrude_temp: 170
min_temp: 10
max_temp: 270

[tmc2240 extruder]
uart_pin: SB2040:gpio15
interpolate: False
run_current: 0.65
interpolate: False
rref: 12300
stealthchop_threshold: 0
driver_TPFD: 0

[heater_bed]
heater_pin: PA5
sensor_type: Generic 3950
sensor_pin: PA0
min_temp: 0
max_temp: 130

[bed_mesh]
speed: 100
horizontal_move_z: 2.8
mesh_min: 25.0, 25.0
mesh_max: 225.0, 185.0
probe_count: 7,7
fade_start: 1.0
fade_end: 10.0
fade_target: 0
algorithm: bicubic
zero_reference_position: 125, 80.25
adaptive_margin: 5

[screws_tilt_adjust]
# SW Nylock Mod: Screw 1 uses the 6mm metallic spacer so its
# height is considered the baseline. For tilt adjust using the
# command SCREWS_TILT_CALCULATE, this has to be your Screw 1:
#
#         ******************
#         * S7    S8    S9 *
#         *                * 
#   Bed:  * S5    S1    S6 *  
#         *                *
#         * S2    S3    S4 *
#         ******************
#
screw1: 125,80.25
screw1_name: center
screw2: 16,-24
screw2_name: front_left
screw3: 125,-24
screw3_name: front_center
screw4: 227,-24
screw4_name: front_right
screw5: 16,80.25
screw5_name: middle_left
screw6: 227,80.25
screw6_name: middle_right
screw7: 16,185
screw7_name: rear_left
screw8: 125,185
screw8_name: rear_center
screw9: 227,185
screw9_name: rear_right
horizontal_move_z: 10.
speed: 50.
screw_thread: CCW-M3

[safe_z_home]
home_xy_position: 125.0, 80.25
speed: 200
z_hop: 20
z_hop_speed: 25

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: _BED_MESH_CALIBRATE
gcode:
    _BED_MESH_CALIBRATE METHOD=rapid_scan PGP=1 {rawparams}

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E-{E} F2100
    {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
        G1 Z{z_safe} F900
        G90
        G1 X{x_park} Y{y_park} F6000
    {% else %}
        {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
        {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G91
        G1 E{E} F2100
    {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: BASE_CANCEL_PRINT
gcode:
    M400                           ; wait for buffer to clear
    G28 X Y                        ; park nozzle at home
    M107                           ; turn off fan
    
    TURN_OFF_HEATERS
    
    BED_MESH_CLEAR
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[virtual_sdcard]
path: /home/biqu/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[force_move]
enable_force_move: true

[pause_resume]
recover_velocity: 50

[respond]

[exclude_object]

[input_shaper]
#shaper_freq_x: 0
#   A frequency (in Hz) of the input shaper for X axis. This is
#   usually a resonance frequency of X axis that the input shaper
#   should suppress. For more complex shapers, like 2- and 3-hump EI
#   input shapers, this parameter can be set from different
#   considerations. The default value is 0, which disables input
#   shaping for X axis.
#shaper_freq_y: 0
#   A frequency (in Hz) of the input shaper for Y axis. This is
#   usually a resonance frequency of Y axis that the input shaper
#   should suppress. For more complex shapers, like 2- and 3-hump EI
#   input shapers, this parameter can be set from different
#   considerations. The default value is 0, which disables input
#   shaping for Y axis.
#shaper_type: mzv
#   A type of the input shaper to use for both X and Y axes. Supported
#   shapers are zv, mzv, zvd, ei, 2hump_ei, and 3hump_ei. The default
#   is mzv input shaper.
#shaper_type_x:
#shaper_type_y:
#   If shaper_type is not set, these two parameters can be used to
#   configure different input shapers for X and Y axes. The same
#   values are supported as for shaper_type parameter.
#damping_ratio_x: 0.1
#damping_ratio_y: 0.1
#   Damping ratios of vibrations of X and Y axes used by input shapers
#   to improve vibration suppression. Default value is 0.1 which is a
#   good all-round value for most printers. In most circumstances this
#   parameter requires no tuning and should not be changed.

[adxl345]
cs_pin: PC0
# spi_bus: spi2
spi_software_sclk_pin: PB13
spi_software_mosi_pin: PB15
spi_software_miso_pin: PB14

[lis2dw]
cs_pin: SB2040:gpio12
spi_software_sclk_pin: SB2040:gpio2
spi_software_mosi_pin: SB2040:gpio3
spi_software_miso_pin: SB2040:gpio4

[resonance_tester]
probe_points: 125, 105, 20
accel_chip_x: lis2dw
accel_chip_y: adxl345
min_freq: 5
max_freq: 133.33
accel_per_hz: 75
hz_per_sec: 1

[probe]
pin: SB2040:gpio22
#deactivate_on_each_sample: True
#   This determines if Klipper should execute deactivation gcode
#   between each probe attempt when performing a multiple probe
#   sequence. The default is True.
x_offset: 0.0
y_offset: 25.0
z_offset: 10
speed: 40.0
samples: 3
sample_retract_dist: 3.0
lift_speed: 5.0
samples_result: median
samples_tolerance: 0.100
samples_tolerance_retries: 3

[verify_heater extruder]
max_error: 20
check_gain_time: 120
hysteresis: 50
heating_gain: 2

[verify_heater heater_bed]
max_error: 20
check_gain_time:120
hysteresis: 50
heating_gain: 2

[temperature_sensor BTT_MANTA_M5P]
sensor_type: temperature_mcu

[temperature_sensor FLY_SB2040]
sensor_type: temperature_mcu
sensor_mcu: SB2040

[fan]
pin: SB2040:gpio24

[heater_fan hotend_fan]
pin: SB2040:gpio19
heater: extruder
heater_temp: 50.0

[controller_fan mcu]
pin: PA4
max_power: 0.60
kick_start_time: 0.200
idle_speed: 0.30
heater: heater_bed
stepper: stepper_x, stepper_y, stepper_z

[neopixel head]
pin: SB2040:gpio26
chain_count: 12
color_order: GRBW
initial_RED: 1.0
initial_GREEN: 0.6471
initial_BLUE: 0.0
initial_WHITE: 0.0

[display_status]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.405
#*# pid_ki = 2.260
#*# pid_kd = 65.896
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 58.737
#*# pid_ki = 0.937
#*# pid_kd = 920.707
